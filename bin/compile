#!/bin/bash

set -x

APP_DIR="$1"
ENV_DIR="$3"

# load required environment variables
ROOT_DIR=$(<"$ENV_DIR/ROOT_DIR")
APP_NAME=$(<"$ENV_DIR/APP_NAME")
PROCFILE_PATH="apps/${APP_NAME}/Procfile"

env

if [[ -z $ROOT_DIR ]]; then
    echo "Did you forget to set ROOT_DIR?"
    exit 1
fi

# make sure we're in the root of the app dir
cd "$APP_DIR"

#
# Create a real temporary directory to use as the root dir for dependant modules.
# Using mktemp to make sure we don't use an existing dir and hence make the build
# process behave unpredictably in the (unlikely) case.
#
EXTRA_BUILD_DIR=$(mktemp -d ${APP_DIR}/.tmp.buildpack.XXXXXXXXX)
mkdir -p $EXTRA_BUILD_DIR

# copy the contents of the specified root into the
# the new root

cp -a "$ROOT_DIR/." "$TEMP_DIR"


echo
echo "Additional dependencies fetched from temp directory ${EXTRA_BUILD_DIR}"
echo "Relative path with regards to ${APP_DIR} is ${RELATIVE_PATH_TO_EXTRA_BUILD_DIR}"
echo

#
# Move all the other projects to the created temp directory, and leave only the
# directory that was marked as the ROOT_DIR under APP_DIR
#
mv ${APP_DIR}/* ${EXTRA_BUILD_DIR}/.
mv ${EXTRA_BUILD_DIR}/${ROOT_DIR}/* ${APP_DIR}/.

# remove the temp dir
rm -r $TEMP_DIR

# move Procfile to root
mv $PROCFILE_PATH .
